basePath: /api
definitions:
  domain.User:
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      deleted_at:
        type: string
      email:
        example: ivan@example.com
        type: string
      id:
        example: "1"
        type: string
      name:
        example: Иван Петров
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API сервер для работы с пользователями
  title: User Repository API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Возвращает список пользователей с пагинацией
      parameters:
      - default: 10
        description: Количество записей на странице
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Список пользователей
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Создает нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Создать пользователя
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Помечает пользователя как удаленного
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Удалить пользователя
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Возвращает пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Получить пользователя по ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего пользователя
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Обновить пользователя
      tags:
      - users
swagger: "2.0"
